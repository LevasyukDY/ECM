<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QU5euj10M+wfzQK8ynkPFXwAAAAASUVORK5CYII=
</value>
  </data>
</root>